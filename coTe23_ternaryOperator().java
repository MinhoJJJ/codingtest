class Solution {
	public int solution(int a, int b, int n) {
		// a: 교환에 필요한 공병 수            // 문제에서는 2병로 가정
		// b: 교환 시 받을 수 있는 콜라 수      // 문제에서는 1병로 가정
		// n: 현재 가지고 있는 공병            // 문제에서는 20병로 가정

		int count=0;

		while(true) {

			count=count+n/a*b;  //받은 콜라 갯수
			// 맨처음 공병 20병은 2병씩 교환하면 총 10병(20/2*1)의 콜라를 받을 수있다.
			// 두번째 공병 10병은 총 5병(10/2*1)의 콜라를 받을 수 있다.
			// 세번째 공병 5병은  총 2병(5/2*1)의 콜라를 받을 수 있으며, 1병의 공병이 남는다.
			// 네번째 공병 3병은  총 1병(3/2*1)의 콜라를 받을 수 있으며, 1병의 공병이 남는다.
			// 다섯번째 공병 2병은 총 1병(2/2*1)의 콜라를 받을 수 있으며, 남은 공병은 이제 없다.

			n=n-((n/a)*a)+n/a*b;  // 빈병 갯수
			// 맨처음 교환을 끝내고 받은 콜라를 다 마시고 공병으로 만들어서 공병은 10병(20-(20/2*2)+20/2)이 되었다.
			// 두번째 교환을 끝내고 다시 만든 공병 개수와 남은 공병 개수는 5병(10-(10/2*2)+10/2)이 되었다.
			// 세번째 남은 공병은 3병(5-(5/2*2)+5/2)이 되었다.
			// 네번째 남은 공병은 2병(3-(3/2*2)+3/2)이 되었다.
			// 다섯번째 남은 공병은 0병이므로 반복문을 벗어난다.

			if(n<a) break;  // 만약 남은 공병수가 교환에 필요한 공병 수보다 적다면 반복문을 벗어난다.
		}

		return count;  총 받을 수 있는 콜라는 19병이다.
	}
}

//
//class Solution {
//	public int solution(int a, int b, int n) {
//		return (n > b ? n - b : 0) / (a - b) * b;
//	}
//}
//// a: 교환에 필요한 공병 수            // 문제에서는 2병로 가정
//// b: 교환 시 받을 수 있는 콜라 수      // 문제에서는 1병로 가정
//// n: 현재 가지고 있는 공병            // 문제에서는 20병로 가정
//
////  20>1이 참
////  n-b은 19   /  a-b는 1   =  19 * b(1) 는 19므로 19개를 리턴한다.